{"ast":null,"code":"import _toConsumableArray from \"/Users/tyrellgordon/Developer/ChatroomApp/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tyrellgordon/Developer/ChatroomApp/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tyrellgordon/Developer/ChatroomApp/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tyrellgordon/Developer/ChatroomApp/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tyrellgordon/Developer/ChatroomApp/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tyrellgordon/Developer/ChatroomApp/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tyrellgordon/Developer/ChatroomApp/frontend/src/MessagingPanel.js\";\nimport React, { Component, Fragment } from 'react';\nimport MessagingBox from './MessagingBox';\nimport DisplayConversation from './DisplayConversation';\n\nvar MessagingPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessagingPanel, _Component);\n\n  function MessagingPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MessagingPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MessagingPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: []\n    };\n    _this.connection = new WebSocket('ws://localhost:9090/');\n\n    _this.getMessage = function (message) {\n      var data = {\n        username: _this.props.username,\n        message: message\n      };\n\n      _this.connection.send(JSON.stringify(data));\n    };\n\n    return _this;\n  }\n\n  _createClass(MessagingPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.connection.onmessage = function (message) {\n        var data = JSON.parse(message.data);\n\n        _this2.setState({\n          messages: _toConsumableArray(_this2.state.messages).concat([data])\n        });\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(DisplayConversation, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(MessagingBox, {\n        getMessage: this.getMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MessagingPanel;\n}(Component);\n\nexport default MessagingPanel;","map":{"version":3,"sources":["/Users/tyrellgordon/Developer/ChatroomApp/frontend/src/MessagingPanel.js"],"names":["React","Component","Fragment","MessagingBox","DisplayConversation","MessagingPanel","state","messages","connection","WebSocket","getMessage","message","data","username","props","send","JSON","stringify","onmessage","parse","setState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;IAGMC,c;;;;;;;;;;;;;;;;;UAGJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;UAIVC,U,GAAa,IAAIC,SAAJ,CAAc,sBAAd,C;;UAabC,U,GAAa,UAACC,OAAD,EAAa;AAExB,UAAMC,IAAI,GAAI;AAACC,QAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWD,QAAtB;AAAgCF,QAAAA,OAAO,EAAEA;AAAzC,OAAd;;AAEA,YAAKH,UAAL,CAAgBO,IAAhB,CAAqBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArB;AAED,K;;;;;;;wCAhBkB;AAAA;;AAEjB,WAAKJ,UAAL,CAAgBU,SAAhB,GAA4B,UAACP,OAAD,EAAa;AAEvC,YAAMC,IAAI,GAAGI,IAAI,CAACG,KAAL,CAAWR,OAAO,CAACC,IAAnB,CAAb;;AACA,QAAA,MAAI,CAACQ,QAAL,CAAc;AAACb,UAAAA,QAAQ,qBAAM,MAAI,CAACD,KAAL,CAAWC,QAAjB,UAA2BK,IAA3B;AAAT,SAAd;AAED,OALD;AAMD;;;6BAUU;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,mBAAD;AAAqB,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAKG,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF;AAMD;;;;EAnC0BT,S;;AAsC7B,eAAeI,cAAf","sourcesContent":["import React, { Component, Fragment} from 'react';\nimport MessagingBox from './MessagingBox'\nimport DisplayConversation from './DisplayConversation'\n\n\nclass MessagingPanel extends Component {\n\n\n  state = {\n    messages: []\n  }\n\nconnection = new WebSocket('ws://localhost:9090/')\n\n\ncomponentDidMount(){\n\n  this.connection.onmessage = (message) => {\n\n    const data = JSON.parse(message.data)\n    this.setState({messages: [...this.state.messages, data]})\n\n  }\n}\n\ngetMessage = (message) => {\n\n  const data  = {username: this.props.username, message: message}\n\n  this.connection.send(JSON.stringify(data))\n\n}\n\n  render() {\n    return (\n      <Fragment>\n      <DisplayConversation messages={this.state.messages}/>\n      <MessagingBox getMessage={this.getMessage}/>\n      </Fragment>\n    );\n  }\n}\n\nexport default MessagingPanel;\n"]},"metadata":{},"sourceType":"module"}